<html>
<head>
  <title>ulf</title>
  <style>
    body{margin:0;}
    canvas{ width:100%; height: 100%;}
    #data{color: white; position: absolute;}
  </style>
</head>
<body>
  <script src="https://cdn.socket.io/socket.io-1.3.4.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/threejs/r69/three.min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/mathjs/1.2.0/math.min.js"></script>
  <script src="scripts/mathFunctions.js"></script>
  <script src="scripts/geometry.js"></script>
  <script src="scripts/constants.js"></script>
  <script src="scripts/thrustPD.js"></script>
  <script src="scripts/positionCalculation.js"></script>
  <script src="scripts/flightControl.js"></script>
  <script>
    var socket = io();
    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );
    var copters = [];
    var copter = new Copter();
    copters.push(copter.object);
    for(var i = 0; i < copters.length; i++)
      scene.add(copters[i]);

    // camera.up.set( 0, 0, 1 );
    camera.position.z = 5;
    camera.position.y = 2;
    var clock =  new THREE.Clock();
      copter.object.position.y = copter.positionInertial._data[1][0];

    var render = function () {
      delta = clock.getDelta();
      requestAnimationFrame( render );
      // Update velocities and rotations
      copter.update(0.01);

      renderer.render(scene, camera);
    };

    render();

    </script>
</body>
</html>
